//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TESTApp.B2BManagement {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="B2BManagement_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement")]
    public partial class B2BManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSalesPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesDiscountOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOrderB2BOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateB2BPasswordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public B2BManagement() {
            this.Url = global::TESTApp.Properties.Settings.Default.TESTApp_B2BManagement_B2BManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSalesPriceCompletedEventHandler GetSalesPriceCompleted;
        
        /// <remarks/>
        public event GetSalesDiscountCompletedEventHandler GetSalesDiscountCompleted;
        
        /// <remarks/>
        public event InsertOrderB2BCompletedEventHandler InsertOrderB2BCompleted;
        
        /// <remarks/>
        public event UpdateB2BPasswordCompletedEventHandler UpdateB2BPasswordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/B2BManagement:GetSalesPrice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement", ResponseElementName="GetSalesPrice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetSalesPrice(string custNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime postingDate, string itemNo, decimal quantity, string uoM, string campaignCode) {
            object[] results = this.Invoke("GetSalesPrice", new object[] {
                        custNo,
                        postingDate,
                        itemNo,
                        quantity,
                        uoM,
                        campaignCode});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesPriceAsync(string custNo, System.DateTime postingDate, string itemNo, decimal quantity, string uoM, string campaignCode) {
            this.GetSalesPriceAsync(custNo, postingDate, itemNo, quantity, uoM, campaignCode, null);
        }
        
        /// <remarks/>
        public void GetSalesPriceAsync(string custNo, System.DateTime postingDate, string itemNo, decimal quantity, string uoM, string campaignCode, object userState) {
            if ((this.GetSalesPriceOperationCompleted == null)) {
                this.GetSalesPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesPriceOperationCompleted);
            }
            this.InvokeAsync("GetSalesPrice", new object[] {
                        custNo,
                        postingDate,
                        itemNo,
                        quantity,
                        uoM,
                        campaignCode}, this.GetSalesPriceOperationCompleted, userState);
        }
        
        private void OnGetSalesPriceOperationCompleted(object arg) {
            if ((this.GetSalesPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesPriceCompleted(this, new GetSalesPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/B2BManagement:GetSalesDiscount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement", ResponseElementName="GetSalesDiscount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetSalesDiscount(string custNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime postingDate, string itemNo, decimal quantity, string uoM, string campaignCode) {
            object[] results = this.Invoke("GetSalesDiscount", new object[] {
                        custNo,
                        postingDate,
                        itemNo,
                        quantity,
                        uoM,
                        campaignCode});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesDiscountAsync(string custNo, System.DateTime postingDate, string itemNo, decimal quantity, string uoM, string campaignCode) {
            this.GetSalesDiscountAsync(custNo, postingDate, itemNo, quantity, uoM, campaignCode, null);
        }
        
        /// <remarks/>
        public void GetSalesDiscountAsync(string custNo, System.DateTime postingDate, string itemNo, decimal quantity, string uoM, string campaignCode, object userState) {
            if ((this.GetSalesDiscountOperationCompleted == null)) {
                this.GetSalesDiscountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesDiscountOperationCompleted);
            }
            this.InvokeAsync("GetSalesDiscount", new object[] {
                        custNo,
                        postingDate,
                        itemNo,
                        quantity,
                        uoM,
                        campaignCode}, this.GetSalesDiscountOperationCompleted, userState);
        }
        
        private void OnGetSalesDiscountOperationCompleted(object arg) {
            if ((this.GetSalesDiscountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesDiscountCompleted(this, new GetSalesDiscountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/B2BManagement:InsertOrderB2B", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement", ResponseElementName="InsertOrderB2B_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertOrderB2B(string orderNo, int lineNo, string customerNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime orderDate, string shipAddressCode, string itemNo, decimal qty, string note) {
            object[] results = this.Invoke("InsertOrderB2B", new object[] {
                        orderNo,
                        lineNo,
                        customerNo,
                        orderDate,
                        shipAddressCode,
                        itemNo,
                        qty,
                        note});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOrderB2BAsync(string orderNo, int lineNo, string customerNo, System.DateTime orderDate, string shipAddressCode, string itemNo, decimal qty, string note) {
            this.InsertOrderB2BAsync(orderNo, lineNo, customerNo, orderDate, shipAddressCode, itemNo, qty, note, null);
        }
        
        /// <remarks/>
        public void InsertOrderB2BAsync(string orderNo, int lineNo, string customerNo, System.DateTime orderDate, string shipAddressCode, string itemNo, decimal qty, string note, object userState) {
            if ((this.InsertOrderB2BOperationCompleted == null)) {
                this.InsertOrderB2BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOrderB2BOperationCompleted);
            }
            this.InvokeAsync("InsertOrderB2B", new object[] {
                        orderNo,
                        lineNo,
                        customerNo,
                        orderDate,
                        shipAddressCode,
                        itemNo,
                        qty,
                        note}, this.InsertOrderB2BOperationCompleted, userState);
        }
        
        private void OnInsertOrderB2BOperationCompleted(object arg) {
            if ((this.InsertOrderB2BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOrderB2BCompleted(this, new InsertOrderB2BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/B2BManagement:UpdateB2BPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement", ResponseElementName="UpdateB2BPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/B2BManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateB2BPassword(string customerNo, string mD5_B2BPwd, string mD5_B2BHiddenPricePwd) {
            object[] results = this.Invoke("UpdateB2BPassword", new object[] {
                        customerNo,
                        mD5_B2BPwd,
                        mD5_B2BHiddenPricePwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateB2BPasswordAsync(string customerNo, string mD5_B2BPwd, string mD5_B2BHiddenPricePwd) {
            this.UpdateB2BPasswordAsync(customerNo, mD5_B2BPwd, mD5_B2BHiddenPricePwd, null);
        }
        
        /// <remarks/>
        public void UpdateB2BPasswordAsync(string customerNo, string mD5_B2BPwd, string mD5_B2BHiddenPricePwd, object userState) {
            if ((this.UpdateB2BPasswordOperationCompleted == null)) {
                this.UpdateB2BPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateB2BPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateB2BPassword", new object[] {
                        customerNo,
                        mD5_B2BPwd,
                        mD5_B2BHiddenPricePwd}, this.UpdateB2BPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateB2BPasswordOperationCompleted(object arg) {
            if ((this.UpdateB2BPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateB2BPasswordCompleted(this, new UpdateB2BPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSalesPriceCompletedEventHandler(object sender, GetSalesPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSalesDiscountCompletedEventHandler(object sender, GetSalesDiscountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void InsertOrderB2BCompletedEventHandler(object sender, InsertOrderB2BCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOrderB2BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOrderB2BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateB2BPasswordCompletedEventHandler(object sender, UpdateB2BPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateB2BPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateB2BPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591